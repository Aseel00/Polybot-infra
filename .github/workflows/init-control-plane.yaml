name: ⚙️ Initialize Kubernetes Control Plane

on:
  workflow_run:
    workflows: ["🚀 Provision Kubernetes Infrastructure"]
    types:
      - completed

permissions:
  actions: read
  contents: read

jobs:
  init-control-plane:
    runs-on: ubuntu-latest
    name: Init Control Plane

    steps:

     # - name: Download Control Plane IP artifact
      ##  uses: actions/download-artifact@v4
      #  with:
      #    name: control-plane-ip
      #    path: .

     # - name: Read IP into ENV
       # run: |
       #   echo "EC2_HOST=$(cat control_plane_ip.txt)" >> $GITHUB_ENV

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config << EOF
          Host ec2
              HostName ${{ secrets.EC2_CONTROL_HOST }}
              User ${{ secrets.EC2_USER }}
              IdentityFile ~/.ssh/private_key
              StrictHostKeyChecking no
          EOF

      - name: SSH and initialize Kubernetes
        run: |
          ssh ec2 << EOF
            set -e
            if [ ! -f /etc/kubernetes/admin.conf ]; then
              sudo kubeadm init --pod-network-cidr=192.168.0.0/16

              mkdir -p \$HOME/.kube
              sudo cp -i /etc/kubernetes/admin.conf \$HOME/.kube/config
              sudo chown \$(id -u):\$(id -g) \$HOME/.kube/config

              kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.2/manifests/calico.yaml
            fi

            # Refresh join command and update secret
            JOIN_CMD="sudo \$(kubeadm token create --print-join-command)"
            echo "\$JOIN_CMD" > /tmp/k8s_join.sh

            if ! command -v aws &>/dev/null; then
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              sudo ./aws/install
            fi

            # Check if the secret exists
            if aws secretsmanager describe-secret --secret-id ASEEL_K8S_JOIN_COMMAND --region eu-north-1 2>/dev/null; then
              # Secret exists, update it
              aws secretsmanager put-secret-value \
                --secret-id ASEEL_K8S_JOIN_COMMAND \
                --secret-string file:///tmp/k8s_join.sh \
                --region eu-north-1
            else
              # Secret doesn't exist, create it
              aws secretsmanager create-secret \
                --name ASEEL_K8S_JOIN_COMMAND \
                --secret-string file:///tmp/k8s_join.sh \
                --region eu-north-1
            fi

          EOF
